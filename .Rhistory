library(class, lib.loc = "/usr/lib/R/library")
?knn
?lm
install.packages("lm")
install.packages('lm')
install.packages('stats')
install.packages("stats")
install.packages("stats")
library(class, lib.loc = "/usr/lib/R/library")
install.packages('neuralnet')
library(neuralnet)
?lm
[1] 35.5
#Pegando temperatura do 2 elemento
temperatura[2]
#Criando vetores para os 3 pacientes
nome <- c("Mike", "Rhenzo", "Vinicius")
temperatura <- c(42.9, 35.5, 35)
status <- c(TRUE, FALSE, FALSE)
#Pegando temperatura do 2 elemento
temperatura[2]
#Pegando temperatura do 2 elemento
temperatura[2]
#Criando vetores para os 3 pacientes
nome <- c("Mike", "Rhenzo", "Vinicius")
temperatura <- c(42.9, 35.5, 35)
status <- c(TRUE, FALSE, FALSE)
#Pegando temperatura do 2 elemento
temperatura[2]
#criando fatores
gender <- factor(c("MALE,", "FEMALE", "MALE"))
gender
#add sangue
blood <- factor(c("AZUL", "AB", "A"))
levels = c("AZUL", "A", "B", "AB", "O")
blood
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO", "MODERADO", "SEVERE")
ordered(TRUE)
sintoma
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO", "MODERADO", "SEVERE")
ordered = TRUE
sintoma
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO", "MODERADO", "SEVERO")
ordered = TRUE
sintoma
pt_data <- data.frame(nome, temperatura, status, gender, blood, sintoma, stringAsFactor = FALSE)
pt_data
pt_data[2:3]
pt_data[1, 2]
pt_data[, 1]
pt_data[, 1]
sintoma
pt_data <- data.frame(nome, temperatura, status, gender, blood, sintoma, stringsAsFactors = FALSE)
pt_data
pt_data[2:3]
pt_data[1, 2]
pt_data[, 1]
pt_data[1,4]
pt_data[1:4]
pt_data[1:4,-2,-3]
#Criando vetores para os 3 pacientes
nome <- c("Mike", "Rhenzo", "Vinicius")
temperatura <- c(42.9, 37, 35)
status <- c(TRUE, FALSE, FALSE)
#Pegando temperatura do 2 elemento
temperatura[2]
#criando fatores
gender <- factor(c("MALE,", "FEMALE", "MALE"))
gender
#add sangue
blood <- factor(c("AZUL", "AB", "A"))
levels = c("AZUL", "A", "B", "AB", "O")
blood
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO", "MODERADO", "SEVERO")
ordered = TRUE
sintoma
pt_data <- data.frame(nome, temperatura, status, gender, blood, sintoma, stringsAsFactors = FALSE)
pt_data
pt_data[2:3]
pt_data[1, 2]
pt_data[, 1]
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO" < "MODERADO" < "SEVERO")
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"))
levels = c("POUCO", "MODERADO", "SEVERO")
ordered = TRUE
sintoma
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
setwd("~/Downloads/machineLR")
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#examinando estrutura da base de dados
str(wbcd)
View(wbcd)
View(wbcd)
wbcd <- wbcd [-1]
#examinando estrutura da base de dados
str(wbcd)
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#examinando estrutura da base de dados
str(wbcd)
wbcd <- wbcd [-1]
str(wbcd)
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#examinando estrutura da base de dados
str(wbcd)
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#examinando estrutura da base de dados
str(wbcd)
#Removendo coluna da identificação do paciente
wbcd <- wbcd [-1]
table(wbcd$diagnosis)
#tabela de diagnostico
table(wbcd$diagnosis)
#Rotular dos diagnósticos, e recriar como fator
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"), labels = c("Benigno", "Maligno"))
#Criando vetores para os 3 pacientes
nome <- c("Mike", "Rhenzo", "Vinicius")
temperatura <- c(42.9, 37, 35)
status <- c(TRUE, FALSE, FALSE)
#Pegando temperatura do 2 elemento
temperatura[2]
#criando fatores
gender <- factor(c("MALE,", "FEMALE", "MALE"))
gender
#add sangue
blood <- factor(c("AZUL", "AB", "A"))
levels = c("AZUL", "A", "B", "AB", "O")
blood
#Ordenando fatores
sintoma <- factor(c("SEVERO", "POUCO", "MODERADO"), levels = c("POUCO", "MODERADO", "SEVERO"), ordered = TRUE)
sintoma
pt_data <- data.frame(nome, temperatura, status, gender, blood, sintoma, stringsAsFactors = FALSE)
pt_data
pt_data[2:3]
pt_data[1, 2]
pt_data[, 1]
#import the csv file
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
#examinando estrutura da base de dados
str(wbcd)
#Removendo coluna da identificação do paciente
wbcd <- wbcd [-1]
#tabela de diagnostico
table(wbcd$diagnosis)
#Rotular dos diagnósticos, e recriar como fator
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"), labels = c("Benigno", "Maligno"))
View(wbcd)
View(wbcd)
#criando uma proporção
round(prop.table(table(wbcd$diagnosis))* 100, digits = 1)
#criando sumario
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
#criando uma função de normalização
normalize <- function(x) {
return((x - min(x) / (max(x) - min(x))))
}
wbcd_n <- as.data.frame(lapply(wbcd[2:31], normalize))
#testando função normalize
summary(wbcd_n$area_mean)
#criando sumario
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
#criando uma função de normalização
normalize <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
wbcd_n <- as.data.frame(lapply(wbcd[2:31], normalize))
#testando função normalize
summary(wbcd_n$area_mean)
